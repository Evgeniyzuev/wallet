import React, { useState, useEffect } from 'react';

interface InfoPopupProps {
  isOpen: boolean;
  onClose: () => void;
}

export default function InfoPopup({ isOpen, onClose }: InfoPopupProps) {
  const [dontShowAgain, setDontShowAgain] = useState(false);

  useEffect(() => {
    // Check if user has previously chosen to not show the popup
    const shouldShow = localStorage.getItem('hideInfoPopup');
    if (shouldShow === 'true') {
      onClose();
    }
  }, [onClose]);

  const handleClose = () => {
    if (dontShowAgain) {
      localStorage.setItem('hideInfoPopup', 'true');
    }
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-2">
      <div className="bg-[#1c2033] rounded-lg p-2 max-w-md w-full">
        <h2 className="text-2xl font-bold text-white mb-4">–ö–∞–∫ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥ —Å WeAi?</h2>
        <p className="text-gray-300 mb-6">
          Ai —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –∏ —É—á–∞—Ç—Å—è –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ.<br/>
          <br/>
          <b>WeAi</b> - –ø–µ—Ä–≤–∞—è Ai –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∏—Ç –≤–µ—Å—å –¥–æ—Ö–æ–¥ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.<br/>
          <br/>
          üí≤ –†–∞–∑–º–µ—Ä –¥–æ—Ö–æ–¥–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –µ–≥–æ –ª–∏—á–Ω–æ–≥–æ Ai —è–¥—Ä–∞<br/>
          üß† Ai —è–¥—Ä–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–æ—Ö–æ–¥ –∏ —Ä–∞—Å—Ç–µ—Ç<br/>
          ‚úÖ –ë–æ–Ω—É—Å—ã –∑–∞ –∑–∞–¥–∞–Ω–∏—è —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —è–¥—Ä–æ –∏ –¥–æ—Ö–æ–¥<br/>
          <br/>
          üéØ –ö–∞–∫ –±—ã—Å—Ç—Ä–æ –º–æ–∂–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å —è–¥—Ä–æ –¥–æ –Ω—É–∂–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞?<br/>
          üöÄ –°–µ–π—á–∞—Å —É–∑–Ω–∞–µ–º!
        </p>
        <div className="flex flex-col space-y-4">
          <label className="flex items-center space-x-2 text-white cursor-pointer">
            <input
              type="checkbox"
              checked={dontShowAgain}
              onChange={(e) => setDontShowAgain(e.target.checked)}
              className="appearance-none h-5 w-5 rounded-full border-2 border-blue-500 checked:bg-blue-500 checked:border-transparent transition duration-150 ease-in-out"
            />
            <span>–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å</span>
          </label>
          <button
            onClick={handleClose}
            className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-lg transition-colors w-full"
          >
            OK
          </button>
        </div>
      </div>
    </div>
  );
} 